/*
 * pedidos.h
 *
 *  Created on: 10 oct. 2019
 *      Author: alumno
 */

#ifndef PEDIDOS_H_
#define PEDIDOS_H_

#define PENDIENTE 0
#define COMPLETADO 1

#define HDPE 0
#define LDPE 1
#define PP 2

typedef struct
{
	int idPedidos;
	int idClientes;
	float kilos;
	int estado;
	int isEmpty;
	int tiposResiduos;

}ePedidos;

int initPedidos(ePedidos* list, int len);

int findEmptySpacePedidos(ePedidos* list, int len);

int existPedidos(ePedidos* list, int len);

/** \brief  Busca en el array el id mas alto entre los usados
 * \param ePedidos* ePedidos Puntero al array de pedidos
 * \param len int Longitud del array
 * \return int Return (-1) si hay un Error [Longitud invalida o puntero NULL] - (proximo ID) si Ok
 *
 */
int pedidosFindNextId(ePedidos* list, int length);

int pedido_find(ePedidos* list, int len, int idPedidos);

int addPedidos(ePedidos* list, int len, int idClientes, float kilos, int tiposResiduos);

int controllerGetPedidos(eClientes* list, int len);

int findPedidosById(ePedidos* list, int len, int id);

int pedidos_terminados(ePedidos* list, int len, int idPedido, int estado, int kilos);

int getDeleteClientes(eClientes* list,int len);

int printPedidos (ePedidos* list, int len);




#endif /* PEDIDOS_H_ */
